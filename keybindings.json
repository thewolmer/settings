// Place your key bindings in this file to override the defaultsauto[]
[
  //navigation
  {
    "command": "-workbench.action.quickOpen",
    "key": "ctrl+p"
  },
  {
    "command": "find-it-faster.findFiles",
    "key": "ctrl+p"
  },
  {
    "command": "-find-it-faster.findFiles",
    "key": "ctrl+shift+j"
  },
  {
    "command": "workbench.action.focusSideBar",
    "key": "ctrl+h"
  },
  {
    "command": "workbench.action.focusActiveEditorGroup",
    "key": "ctrl+l"
  },
  {
    "command": "editor.action.startFindReplaceAction",
    "key": "ctrl+f",
    "when": "vim.mode == 'Normal' || vim.mode == 'Visual'"
  },
  {
    "command": "workbench.action.showAllEditors",
    "key": "space ,",
    "when": "vim.mode == 'Normal' && (editorTextFocus ||!inputFocus)"
  },
  {
    "command": "workbench.action.nextEditorInGroup",
    "key": "tab",
    "when": " (vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus ||!inputFocus)"
  },
  {
    "command": "workbench.action.closeActiveEditor",
    "key": "ctrl+w",
    "when": " (vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus ||!inputFocus)"
  },
  {
    "command": "workbench.action.previousEditorInGroup",
    "key": "shift-tab",
    "when": " (vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus ||!inputFocus)"
  },
  {
    "key": "ctrl+k ctrl+j",
    "command": "-editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+alt+p",
    "command": "find-it-faster.resumeSearch"
  },
  //Coding
  {
    "command": "editor.action.moveLinesUpAction",
    "key": "shift+k",
    "when": "  (vim.mode == 'Normal' || vim.mode == 'Visual') && editorTextFocus"
  },
  {
    "command": "editor.action.moveLinesDownAction",
    "key": "shift+j",
    "when": " (vim.mode == 'Normal' || vim.mode == 'Visual') && editorTextFocus"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "command": "editor.action.showHover",
    "key": "space h",
    "when": " vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.rename",
    "key": "space r",
    "when": " vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.codeAction",
    "key": "space c a",
    "when": " vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.formatDocument",
    "key": "space c f",
    "when": " vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.commentLine",
    "key": "space c l",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.organizeImports",
    "key": "space o i",
    "when": " vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.revealDefinition",
    "key": "space g d",
    "when": " vim.mode == 'Normal' && editorTextFocus"
  },
  // File Tree
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl+e"
  },
  {
    "command": "workbench.files.action.focusFilesExplorer",
    "key": "ctrl+e",
    "when": "editorTextFocus"
  },
  {
    "key": "n",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && !inputFocus"
  },
  //misc
  {
    "command": "extension.splitHTMLAttributes",
    "key": "ctrl+shift+alt+z",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-extension.splitHTMLAttributes",
    "key": "ctrl+shift+alt+a",
    "when": "editorTextFocus && !editorReadonly"
  },
]
